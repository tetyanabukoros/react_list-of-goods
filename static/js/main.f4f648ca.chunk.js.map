{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","reset","setState","reverse","sortByAlpabet","ALPABET","sortByLength","LENGTH","this","visibleGoods","goods","sort","g1","g2","length","localeCompare","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,YAAY,EAAOC,SAAUN,EAASO,QAR1D,EAWEG,QAAU,WACR,EAAKD,UAAS,SAACN,GAAD,MAAY,CACxBE,YAAaF,EAAME,gBAbzB,EAiBEM,cAAgB,WACd,EAAKF,SAAS,CAAEH,SAAUN,EAASY,WAlBvC,EAqBEC,aAAe,WACb,EAAKJ,SAAS,CAAEH,SAAUN,EAASc,UAtBvC,4CAyBE,WAAU,IAAD,OACP,EAA4CC,KAAKZ,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBU,EA5DV,SACEC,EACAX,EACAD,GAEA,IAAMW,EAAY,YAAOC,GAEzB,OAAQX,GACN,KAAKN,EAASc,OACZE,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAC7C,MACF,KAAKrB,EAASY,QACZI,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,cAAcF,MAEjD,KAAKpB,EAASO,MAShB,OAJIF,GACFW,EAAaN,UAGRM,EAqCgBO,CACnBtB,EAAiBK,EAAUD,GAG7B,OAEE,qBAAKmB,UAAU,MAAf,SACKpB,EAYC,qCAEE,wBACEqB,KAAK,SACLC,QAASX,KAAKJ,cAFhB,iCAOA,wBACEc,KAAK,SACLC,QAASX,KAAKF,aAFhB,4BAOA,wBACEY,KAAK,SACLC,QAASX,KAAKL,QAFhB,qBAOA,wBACEe,KAAK,SACLC,QAASX,KAAKP,MAFhB,mBAOA,oBAAIgB,UAAU,QAAd,SACGR,EAAaW,KAAI,SAAAC,GAAI,OACpB,6BACGA,GADMA,WA1Cf,wBACEH,KAAK,SACLC,QAAS,kBAAM,EAAKjB,SAAS,CAC3BL,WAAW,KAHf,yBArCZ,GAAyByB,IAAMC,WCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f4f648ca.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, sortType, isReversed,\n    );\n\n    return (\n\n      <div className=\"App\">\n        { !isStarted\n          ? (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({\n                isStarted: true,\n              })}\n            >\n              Start\n            </button>\n          )\n          : (\n            <>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByAlpabet}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {visibleGoods.map(good => (\n                  <li key={good}>\n                    {good}\n\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}